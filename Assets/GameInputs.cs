//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/GameInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputs"",
    ""maps"": [
        {
            ""name"": ""Camera"",
            ""id"": ""64ad9aad-2e92-46a9-8394-8d00d4d16a2d"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""f67983f9-8b72-4d2f-a85b-703d3f877a92"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Yaw"",
                    ""type"": ""Value"",
                    ""id"": ""936e18bb-43ca-46dd-a0ca-619b13d87363"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pitch"",
                    ""type"": ""Value"",
                    ""id"": ""c3151924-eaf4-4b82-b51f-6b5ab98ab78f"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RTSView"",
                    ""type"": ""Button"",
                    ""id"": ""30f30e9e-c968-4b1b-bce3-0617028eb131"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""7bbfbee4-42a0-4158-a3b8-e7409d3a91f5"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""74e0dcb8-042d-4fc3-8e6a-db7ce77e4bb9"",
                    ""path"": ""<Keyboard>/#(Z)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ceac0d04-73a8-4c01-ad4e-6e5eeb949215"",
                    ""path"": ""<Keyboard>/#(X)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9dc1e153-ab93-4fd3-913e-98ad334ca781"",
                    ""path"": ""<Keyboard>/#(C)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RTSView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""3D Vector"",
                    ""id"": ""11885b2f-c5fa-4854-b0fc-d4fae0025b85"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bde2e05c-928f-4e87-b9f0-519a7ac09c5d"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0d63169f-30ef-4dca-9219-93e730481cb3"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f82d2fbc-0553-4b35-aba7-f774426873f6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""68a1ef6c-08eb-4dee-87e5-dedd96cfde38"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""a8777dea-e3e7-40e4-bbed-7eeb17af476c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""b9f97baf-6718-40b7-ace0-812da7fb8dd2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""65d45da1-04ed-41b5-aec7-d37b7b660994"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f675fff4-5c88-449b-8b07-ff6e1889137f"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b1273491-306b-45bd-94d2-9191081f3594"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Entities"",
            ""id"": ""ad6cdc96-9ba2-4fc1-891d-e92f04f8dbcc"",
            ""actions"": [
                {
                    ""name"": ""Speed"",
                    ""type"": ""Value"",
                    ""id"": ""a4e81bf9-d93f-45d3-a7a2-6692784ccdad"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Heading"",
                    ""type"": ""Button"",
                    ""id"": ""94bfb878-6ef1-46c7-84c1-bb6d041c240d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextEntity"",
                    ""type"": ""Button"",
                    ""id"": ""2e2eee5b-1a59-427a-ad65-6e1d703254ec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cursor"",
                    ""type"": ""Button"",
                    ""id"": ""80ab0924-1ad9-4659-823e-134cfababc9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CursorPosition"",
                    ""type"": ""Value"",
                    ""id"": ""79ef4dfc-3d0a-4cd5-94e3-c42993aae840"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ClearSelection"",
                    ""type"": ""Button"",
                    ""id"": ""5c5b6087-d7da-4eaa-9738-c1046e895436"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Button"",
                    ""id"": ""3146158d-76ad-4f96-9f0b-3d2f52731f72"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Intercept"",
                    ""type"": ""Button"",
                    ""id"": ""646efab9-b279-4885-a774-9381ae73f38d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Create100"",
                    ""type"": ""Button"",
                    ""id"": ""97f1d73b-41c8-4d0f-a724-758620916edb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""fc1c6d01-0dd6-4ee7-8351-a8813bdd1d90"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Speed"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""317a8fa6-eafe-4ac6-9337-394d4285d422"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Speed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""607d7012-65f3-4c66-80c4-865eaf7e095e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Speed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""df8c5289-e55c-473c-ac5a-c2335e67178b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heading"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c8690e8d-2d62-4958-8fdf-035a0f85c3ad"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heading"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""42aadcca-234d-4582-ab23-b7459a9451e8"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heading"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e541117d-542b-42e6-ba49-e9c14b151efd"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextEntity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79fd010c-592b-44f8-9834-fa5226fd6b09"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc4c2097-5825-42e2-9c60-35b1f62c7916"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ClearSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03080c9b-54f8-49b5-b453-f2f7f3d735fd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aae8eb97-727a-4319-938a-abc7855bc255"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""449f624c-7247-4268-a3df-2b8e52e4c89a"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Intercept"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30b7f619-344b-443f-8541-21d7310d0b2f"",
                    ""path"": ""<Keyboard>/f12"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Create100"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Graph"",
            ""id"": ""bfe753b8-7905-44f6-8fa0-0d335b7af7a5"",
            ""actions"": [
                {
                    ""name"": ""Create"",
                    ""type"": ""Button"",
                    ""id"": ""ac9a43e2-e879-4c22-9e05-6e686fbec7bc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Destroy"",
                    ""type"": ""Button"",
                    ""id"": ""2dae543a-43e1-4cf3-8529-85dfc7c64a83"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a8299f0c-22be-402f-97e4-0d030745c522"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Create"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a618757-988f-4c7d-a077-ce257578b653"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Destroy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Camera
        m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
        m_Camera_Movement = m_Camera.FindAction("Movement", throwIfNotFound: true);
        m_Camera_Yaw = m_Camera.FindAction("Yaw", throwIfNotFound: true);
        m_Camera_Pitch = m_Camera.FindAction("Pitch", throwIfNotFound: true);
        m_Camera_RTSView = m_Camera.FindAction("RTSView", throwIfNotFound: true);
        // Entities
        m_Entities = asset.FindActionMap("Entities", throwIfNotFound: true);
        m_Entities_Speed = m_Entities.FindAction("Speed", throwIfNotFound: true);
        m_Entities_Heading = m_Entities.FindAction("Heading", throwIfNotFound: true);
        m_Entities_NextEntity = m_Entities.FindAction("NextEntity", throwIfNotFound: true);
        m_Entities_Cursor = m_Entities.FindAction("Cursor", throwIfNotFound: true);
        m_Entities_CursorPosition = m_Entities.FindAction("CursorPosition", throwIfNotFound: true);
        m_Entities_ClearSelection = m_Entities.FindAction("ClearSelection", throwIfNotFound: true);
        m_Entities_Move = m_Entities.FindAction("Move", throwIfNotFound: true);
        m_Entities_Intercept = m_Entities.FindAction("Intercept", throwIfNotFound: true);
        m_Entities_Create100 = m_Entities.FindAction("Create100", throwIfNotFound: true);
        // Graph
        m_Graph = asset.FindActionMap("Graph", throwIfNotFound: true);
        m_Graph_Create = m_Graph.FindAction("Create", throwIfNotFound: true);
        m_Graph_Destroy = m_Graph.FindAction("Destroy", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Camera
    private readonly InputActionMap m_Camera;
    private List<ICameraActions> m_CameraActionsCallbackInterfaces = new List<ICameraActions>();
    private readonly InputAction m_Camera_Movement;
    private readonly InputAction m_Camera_Yaw;
    private readonly InputAction m_Camera_Pitch;
    private readonly InputAction m_Camera_RTSView;
    public struct CameraActions
    {
        private @GameInputs m_Wrapper;
        public CameraActions(@GameInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Camera_Movement;
        public InputAction @Yaw => m_Wrapper.m_Camera_Yaw;
        public InputAction @Pitch => m_Wrapper.m_Camera_Pitch;
        public InputAction @RTSView => m_Wrapper.m_Camera_RTSView;
        public InputActionMap Get() { return m_Wrapper.m_Camera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
        public void AddCallbacks(ICameraActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Yaw.started += instance.OnYaw;
            @Yaw.performed += instance.OnYaw;
            @Yaw.canceled += instance.OnYaw;
            @Pitch.started += instance.OnPitch;
            @Pitch.performed += instance.OnPitch;
            @Pitch.canceled += instance.OnPitch;
            @RTSView.started += instance.OnRTSView;
            @RTSView.performed += instance.OnRTSView;
            @RTSView.canceled += instance.OnRTSView;
        }

        private void UnregisterCallbacks(ICameraActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Yaw.started -= instance.OnYaw;
            @Yaw.performed -= instance.OnYaw;
            @Yaw.canceled -= instance.OnYaw;
            @Pitch.started -= instance.OnPitch;
            @Pitch.performed -= instance.OnPitch;
            @Pitch.canceled -= instance.OnPitch;
            @RTSView.started -= instance.OnRTSView;
            @RTSView.performed -= instance.OnRTSView;
            @RTSView.canceled -= instance.OnRTSView;
        }

        public void RemoveCallbacks(ICameraActions instance)
        {
            if (m_Wrapper.m_CameraActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraActions @Camera => new CameraActions(this);

    // Entities
    private readonly InputActionMap m_Entities;
    private List<IEntitiesActions> m_EntitiesActionsCallbackInterfaces = new List<IEntitiesActions>();
    private readonly InputAction m_Entities_Speed;
    private readonly InputAction m_Entities_Heading;
    private readonly InputAction m_Entities_NextEntity;
    private readonly InputAction m_Entities_Cursor;
    private readonly InputAction m_Entities_CursorPosition;
    private readonly InputAction m_Entities_ClearSelection;
    private readonly InputAction m_Entities_Move;
    private readonly InputAction m_Entities_Intercept;
    private readonly InputAction m_Entities_Create100;
    public struct EntitiesActions
    {
        private @GameInputs m_Wrapper;
        public EntitiesActions(@GameInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Speed => m_Wrapper.m_Entities_Speed;
        public InputAction @Heading => m_Wrapper.m_Entities_Heading;
        public InputAction @NextEntity => m_Wrapper.m_Entities_NextEntity;
        public InputAction @Cursor => m_Wrapper.m_Entities_Cursor;
        public InputAction @CursorPosition => m_Wrapper.m_Entities_CursorPosition;
        public InputAction @ClearSelection => m_Wrapper.m_Entities_ClearSelection;
        public InputAction @Move => m_Wrapper.m_Entities_Move;
        public InputAction @Intercept => m_Wrapper.m_Entities_Intercept;
        public InputAction @Create100 => m_Wrapper.m_Entities_Create100;
        public InputActionMap Get() { return m_Wrapper.m_Entities; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(EntitiesActions set) { return set.Get(); }
        public void AddCallbacks(IEntitiesActions instance)
        {
            if (instance == null || m_Wrapper.m_EntitiesActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_EntitiesActionsCallbackInterfaces.Add(instance);
            @Speed.started += instance.OnSpeed;
            @Speed.performed += instance.OnSpeed;
            @Speed.canceled += instance.OnSpeed;
            @Heading.started += instance.OnHeading;
            @Heading.performed += instance.OnHeading;
            @Heading.canceled += instance.OnHeading;
            @NextEntity.started += instance.OnNextEntity;
            @NextEntity.performed += instance.OnNextEntity;
            @NextEntity.canceled += instance.OnNextEntity;
            @Cursor.started += instance.OnCursor;
            @Cursor.performed += instance.OnCursor;
            @Cursor.canceled += instance.OnCursor;
            @CursorPosition.started += instance.OnCursorPosition;
            @CursorPosition.performed += instance.OnCursorPosition;
            @CursorPosition.canceled += instance.OnCursorPosition;
            @ClearSelection.started += instance.OnClearSelection;
            @ClearSelection.performed += instance.OnClearSelection;
            @ClearSelection.canceled += instance.OnClearSelection;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Intercept.started += instance.OnIntercept;
            @Intercept.performed += instance.OnIntercept;
            @Intercept.canceled += instance.OnIntercept;
            @Create100.started += instance.OnCreate100;
            @Create100.performed += instance.OnCreate100;
            @Create100.canceled += instance.OnCreate100;
        }

        private void UnregisterCallbacks(IEntitiesActions instance)
        {
            @Speed.started -= instance.OnSpeed;
            @Speed.performed -= instance.OnSpeed;
            @Speed.canceled -= instance.OnSpeed;
            @Heading.started -= instance.OnHeading;
            @Heading.performed -= instance.OnHeading;
            @Heading.canceled -= instance.OnHeading;
            @NextEntity.started -= instance.OnNextEntity;
            @NextEntity.performed -= instance.OnNextEntity;
            @NextEntity.canceled -= instance.OnNextEntity;
            @Cursor.started -= instance.OnCursor;
            @Cursor.performed -= instance.OnCursor;
            @Cursor.canceled -= instance.OnCursor;
            @CursorPosition.started -= instance.OnCursorPosition;
            @CursorPosition.performed -= instance.OnCursorPosition;
            @CursorPosition.canceled -= instance.OnCursorPosition;
            @ClearSelection.started -= instance.OnClearSelection;
            @ClearSelection.performed -= instance.OnClearSelection;
            @ClearSelection.canceled -= instance.OnClearSelection;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Intercept.started -= instance.OnIntercept;
            @Intercept.performed -= instance.OnIntercept;
            @Intercept.canceled -= instance.OnIntercept;
            @Create100.started -= instance.OnCreate100;
            @Create100.performed -= instance.OnCreate100;
            @Create100.canceled -= instance.OnCreate100;
        }

        public void RemoveCallbacks(IEntitiesActions instance)
        {
            if (m_Wrapper.m_EntitiesActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IEntitiesActions instance)
        {
            foreach (var item in m_Wrapper.m_EntitiesActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_EntitiesActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public EntitiesActions @Entities => new EntitiesActions(this);

    // Graph
    private readonly InputActionMap m_Graph;
    private List<IGraphActions> m_GraphActionsCallbackInterfaces = new List<IGraphActions>();
    private readonly InputAction m_Graph_Create;
    private readonly InputAction m_Graph_Destroy;
    public struct GraphActions
    {
        private @GameInputs m_Wrapper;
        public GraphActions(@GameInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Create => m_Wrapper.m_Graph_Create;
        public InputAction @Destroy => m_Wrapper.m_Graph_Destroy;
        public InputActionMap Get() { return m_Wrapper.m_Graph; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GraphActions set) { return set.Get(); }
        public void AddCallbacks(IGraphActions instance)
        {
            if (instance == null || m_Wrapper.m_GraphActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GraphActionsCallbackInterfaces.Add(instance);
            @Create.started += instance.OnCreate;
            @Create.performed += instance.OnCreate;
            @Create.canceled += instance.OnCreate;
            @Destroy.started += instance.OnDestroy;
            @Destroy.performed += instance.OnDestroy;
            @Destroy.canceled += instance.OnDestroy;
        }

        private void UnregisterCallbacks(IGraphActions instance)
        {
            @Create.started -= instance.OnCreate;
            @Create.performed -= instance.OnCreate;
            @Create.canceled -= instance.OnCreate;
            @Destroy.started -= instance.OnDestroy;
            @Destroy.performed -= instance.OnDestroy;
            @Destroy.canceled -= instance.OnDestroy;
        }

        public void RemoveCallbacks(IGraphActions instance)
        {
            if (m_Wrapper.m_GraphActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGraphActions instance)
        {
            foreach (var item in m_Wrapper.m_GraphActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GraphActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GraphActions @Graph => new GraphActions(this);
    public interface ICameraActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnYaw(InputAction.CallbackContext context);
        void OnPitch(InputAction.CallbackContext context);
        void OnRTSView(InputAction.CallbackContext context);
    }
    public interface IEntitiesActions
    {
        void OnSpeed(InputAction.CallbackContext context);
        void OnHeading(InputAction.CallbackContext context);
        void OnNextEntity(InputAction.CallbackContext context);
        void OnCursor(InputAction.CallbackContext context);
        void OnCursorPosition(InputAction.CallbackContext context);
        void OnClearSelection(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnIntercept(InputAction.CallbackContext context);
        void OnCreate100(InputAction.CallbackContext context);
    }
    public interface IGraphActions
    {
        void OnCreate(InputAction.CallbackContext context);
        void OnDestroy(InputAction.CallbackContext context);
    }
}
